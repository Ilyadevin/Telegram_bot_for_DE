from basic_settings import *


def get_keyboard_fab():
    buttons = [
        types.InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data=callback_numbers),
        types.InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", callback_data=callback_numbers),
        types.InlineKeyboardButton(text="–ò–Ω–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π", callback_data=callback_numbers)
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(*buttons)
    return keyboard


# logger settings

bot = telebot.TeleBot("2029007087:AAHQVbeZofoMALxBCsa_bmwAS0uU6rEchvk")


def about(message):
    bot.send_message(message.chat.id,
                     "–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø–æ–º–æ—â–∏ —à–∫–æ–ª—å–Ω–∏–∫–∞–º –∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º"
                     " –≤ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ —Ä–∞–∑–ª–∏—á–Ω–∏–º —Ç–µ–º–∞–º.\n"
                     "–ê–≤—Ç–æ—Ä: @erlihigh \n")


def programming(message):
    bot.send_message(message.chat.id, '–ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ" - —Ä–∞–±–æ—Ç–∞–µ—Ç')


def math_(message):
    bot.send_message(message.chat.id, '–ö–Ω–æ–ø–∫–∞ "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" - —Ä–∞–±–æ—Ç–∞–µ—Ç')


@bot.message_handler(commands=['start'])
def welcome(message):
    # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üìö –ò—â–µ–º –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É!")
    item2 = types.KeyboardButton("üé¶ –ò—â–µ–º –≤–∏–¥–µ–æ!")
    item3 = types.KeyboardButton("–û–± –∞–≤—Ç–æ—Ä–µ")

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, "
                     "{0.first_name}!\n"
                     "–Ø - <b>{1.first_name}</b>, "
                     "–±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã —Ç—ã –Ω–∞—É—á–∏–ª—Å—è —á–µ–º—É-—Ç–æ –Ω–æ–≤–æ–º—É."
                     .format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def markups(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
    item2 = types.KeyboardButton("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞")
    item3 = types.KeyboardButton("–û–± –∞–≤—Ç–æ—Ä–µ")
    markup.add(item1, item2, item3)
    if message.chat.type == 'private':
        if message.text == 'üìö –ò—â–µ–º –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É!':
            bot.send_message(message.chat.id, "–ß—Ç–æ –∏—â–µ–º?")
            bot.send_message(message.chat.id, "–û—Ç–ª–∞–¥–∫–∞, —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        elif message.text == 'üé¶ –ò—â–µ–º –≤–∏–¥–µ–æ!':
            bot.send_message(message.chat.id, text="–ù–∞ –∫–∞–∫—É—é —Ç–µ–º—É –Ω—É–∂–Ω–æ –≤–∏–¥–µ–æ?\n"
                                                   "–ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–∏–¥–µ–æ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ–º–∞—Ç–∏–∫–∞–º"
                                                   "‚§µ", parse_mode='html', reply_markup=markup)
            bot.send_message(message.chat.id, '–ï—Å–ª–∏ –Ω–µ—Ç –∑–∞–¥–∞–Ω–æ–π —Ç–µ–º—ã - –Ω–∞–ø–∏—à–∏ –µ–µ?')
            bot.send_message(message.chat.id, "–û—Ç–ª–∞–¥–∫–∞, —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        elif message.text == '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ':
            programming(message)
        elif message.text == '–û–± –∞–≤—Ç–æ—Ä–µ':
            about(message)


@bot.message_handler(commands=['math_'])
def keyboard(message):
    bot.send_message(message.chat.id, '–ö–Ω–æ–ø–∫–∞ "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" - —Ä–∞–±–æ—Ç–∞–µ—Ç')


# fabnum - –ø—Ä–µ—Ñ–∏–∫—Å, action - –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–º –±—É–¥–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ
callback_numbers = CallbackData("fabnum", "action")


async def update_num_text_fab(message: types.Message, new_value: int):
    with suppress(MessageNotModified):
        await message.edit_text(f"–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ: {new_value}", reply_markup=get_keyboard_fab())


@dp.message_handler(commands="numbers_fab")
async def cmd_numbers(message: types.Message):
    user_data[message.from_user.id] = 0
    await message.answer("–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ: 0", reply_markup=get_keyboard_fab())


@dp.callback_query_handler(callback_numbers.filter(action=["incr", "decr"]))
async def callbacks_num_change_fab(call: types.CallbackQuery, callback_data: dict):
    user_value = user_data.get(call.from_user.id, 0)
    action = callback_data["action"]
    if action == "incr":
        user_data[call.from_user.id] = user_value + 1
        await update_num_text_fab(call.message, user_value + 1)
    elif action == "decr":
        user_data[call.from_user.id] = user_value - 1
        await update_num_text_fab(call.message, user_value - 1)
    await call.answer()


@dp.callback_query_handler(callback_numbers.filter(action=["finish"]))
async def callbacks_num_finish_fab(call: types.CallbackQuery):
    user_value = user_data.get(call.from_user.id, 0)
    await call.message.edit_text(f"–ò—Ç–æ–≥–æ: {user_value}")
    await call.answer()


bot.polling(none_stop=True)
