from settings.basic_settings import *

bot = telebot.TeleBot(token_get())


@bot.message_handler(commands=['start'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item2 = types.KeyboardButton("üé¶ –ò—â–µ–º –≤–∏–¥–µ–æ!")
    item3 = types.KeyboardButton("–û–± –∞–≤—Ç–æ—Ä–µ")

    markup.add(item2, item3)
    time.sleep(1)
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, "
                     "{0.first_name}!\n"
                     "–Ø - <b>{1.first_name}</b>, \n"
                     "–í–º–µ—Å—Ç–µ —Å –ï–ì–≠ —Å –Æ–ö–ª—ç–≤–∞ (YouClever) –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Å–¥–∞—Ç—å –ï–ì–≠ –Ω–∞ 100!"
                     .format(message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé¶ –ò—â–µ–º –≤–∏–¥–µ–æ!':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ë–ê–ó–ê", callback_data='mathv_b')
            item2 = types.InlineKeyboardButton("–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ü—Ä–æ—Ñ–∏–ª—å", callback_data='mathv_p')

            markup.add(item1, item2)
            time.sleep(1)
            bot.send_message(message.chat.id, "–ù–∞ –∫–∞–∫—É—é —Ç–µ–º—É –Ω—É–∂–Ω–æ –≤–∏–¥–µ–æ?\n" "‚§µ",
                             parse_mode='html', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'mathv_b':
                bot.send_message(call.message.chat.id, '–î–∞–ª–µ–µ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã –≤–∏–¥–µ–æ —Å —Ä–∞–∑–±–æ—Ä–æ–º '
                                                       '–≤–∞—Ä–∏–∞–Ω—Ç–∞ –ï–ì–≠ –ø–æ –±–∞–∑–æ–≤–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ')
                time.sleep(1)
                for i in range(1, len(list_of_links["base"])):
                    video = list_of_links["base"][i]
                    time.sleep(1)
                    bot.send_message(call.message.chat.id, video)
                time.sleep(1)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", reply_markup=None)
            elif call.data == 'mathv_p':
                bot.send_message(call.message.chat.id, '–ù—É–∂–µ–Ω —Ä–∞–∑–±–æ—Ä –ø–µ—Ä–≤–æ–π –∏–ª–∏ –≤—Ç–æ—Ä–æ–π —á–∞—Å—Ç–∏?')
                time.sleep(1)
                bot.send_message(call.message.chat.id, '–†–∞–∑–±–æ—Ä 1 —á–∞—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏')
                for i in range(len(list_of_links["profile_1"])):
                    video = list_of_links["profile_1"][i]
                    time.sleep(5)
                    bot.send_message(call.message.chat.id, video)
                time.sleep(1)
                bot.send_message(call.message.chat.id, '–†–∞–∑–±–æ—Ä 2 —á–∞—Å—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏')
                for i in range(len(list_of_links["profile_2"])):
                    video = list_of_links["profile_2"][i]
                    time.sleep(5)
                    bot.send_message(call.message.chat.id, video)
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", reply_markup=None)
            # –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", reply_markup=None)

    except Exception as e:
        bot.send_message(445431715, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - { call.message.message_id} \n"
                                    f"–∫–æ–¥ –æ—à–∏–±–∫–∏ {str(e)}")
